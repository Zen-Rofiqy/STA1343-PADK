plot2 <- ggplot(data, aes(x = residuals(model))) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "black") +
labs(x = "Residuals", y = "Frequency") +
ggtitle("Histogram of Residuals")
# Membuat plot sisaan vs Order dengan ggplot2
plot3 <- ggplot(data, aes(x = 1:length(residuals(model)), y = residuals(model))) +
geom_point(col = "steelblue", pch = 20) +
geom_abline(intercept = 0, slope = 0, color = "black",
size = 1, alpha=0.5) +
geom_line(aes(x = 1:length(residuals(model)),
y = residuals(model)), color = "red", alpha=0.5) +
labs(x = "Order", y = "Residuals") +
ggtitle("Residuals vs Order")
# Menggabungkan semua plot dengan cowplot
plot_grid(qq_plot, plot1, plot2, plot3, nrow = 2, ncol = 2)
install_load('ggplot2','cowplot')
# Membuat QQ Plot
qq_plot <- ggplot(data, aes(sample = y)) +
geom_qq(fill=NA, alpha=0.5) +
geom_qq_line(color = "steelblue") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles") +
ggtitle("QQ Plot") + theme_minimal()
# Membuat plot sisaan vs Fitted Values dengan ggplot2
plot1 <- ggplot(data, aes(x = fitted(model), y = residuals(model))) +
geom_point(col = "steelblue", pch = 20) +
geom_abline(intercept = 0, slope = 0, color = "black",
size = 0.75, alpha=0.5) +
labs(x = "Fitted Values", y = "Residuals") +
ggtitle("Residuals vs Fitted Values") + theme_minimal()
# Membuat histogram sisaan dengan ggplot2
plot2 <- ggplot(data, aes(x = residuals(model))) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "black") +
labs(x = "Residuals", y = "Frequency") +
ggtitle("Histogram of Residuals") + theme_minimal()
# Membuat plot sisaan vs Order dengan ggplot2
plot3 <- ggplot(data, aes(x = 1:length(residuals(model)), y = residuals(model))) +
geom_point(col = "steelblue", pch = 20) +
geom_abline(intercept = 0, slope = 0, color = "black",
size = 1, alpha=0.5) +
geom_line(aes(x = 1:length(residuals(model)),
y = residuals(model)), color = "red", alpha=0.5) +
labs(x = "Order", y = "Residuals") +
ggtitle("Residuals vs Order") + theme_minimal()
# Menggabungkan semua plot dengan cowplot
plot_grid(qq_plot, plot1, plot2, plot3, nrow = 2, ncol = 2)
install_load('ggplot2','cowplot')
# Membuat QQ Plot
qq_plot <- ggplot(data, aes(sample = y)) +
geom_qq(fill=NA, alpha=0.5) +
geom_qq_line(color = "steelblue") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles") +
ggtitle("QQ Plot") + theme_minimal()
# Membuat plot sisaan vs Fitted Values dengan ggplot2
plot1 <- ggplot(data, aes(x = fitted(model), y = residuals(model))) +
geom_point(col = "steelblue", pch = 20) +
geom_abline(intercept = 0, slope = 0, color = "black",
size = 0.75, alpha=0.5) +
labs(x = "Fitted Values", y = "Residuals") +
ggtitle("Residuals vs Fitted Values") + theme_minimal()
# Membuat histogram sisaan dengan ggplot2
plot2 <- ggplot(data, aes(x = residuals(model))) +
geom_histogram(binwidth = 5, fill = "steelblue", color = "black") +
labs(x = "Residuals", y = "Frequency") +
ggtitle("Histogram of Residuals") + theme_minimal()
# Membuat plot sisaan vs Order dengan ggplot2
plot3 <- ggplot(data, aes(x = 1:length(residuals(model)), y = residuals(model))) +
geom_point(col = "steelblue", pch = 20) +
geom_abline(intercept = 0, slope = 0, color = "black",
size = 1, alpha=0.5) +
geom_line(aes(x = 1:length(residuals(model)),
y = residuals(model)), color = "red", alpha=0.5) +
labs(x = "Order", y = "Residuals") +
ggtitle("Residuals vs Order") + theme_minimal()
# Menggabungkan semua plot dengan cowplot
plot_grid(qq_plot, plot1, plot2, plot3, nrow = 2, ncol = 2)
install_load('ggplot2','cowplot')
# Membuat QQ Plot
qq_plot <- ggplot(data, aes(sample = y)) +
geom_qq(fill=NA, alpha=0.5) +
geom_qq_line(color = "steelblue") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles") +
ggtitle("QQ Plot") + theme_minimal()
# Membuat plot sisaan vs Fitted Values dengan ggplot2
plot1 <- ggplot(data, aes(x = fitted(model), y = residuals(model))) +
geom_point(col = "steelblue", pch = 20) +
geom_abline(intercept = 0, slope = 0, color = "black",
size = 0.75, alpha=0.5) +
labs(x = "Fitted Values", y = "Residuals") +
ggtitle("Residuals vs Fitted Values") + theme_minimal()
# Membuat histogram sisaan dengan ggplot2
plot2 <- ggplot(data, aes(x = residuals(model))) +
geom_histogram(binwidth = 10, fill = "steelblue", color = "black") +
labs(x = "Residuals", y = "Frequency") +
ggtitle("Histogram of Residuals") + theme_minimal()
# Membuat plot sisaan vs Order dengan ggplot2
plot3 <- ggplot(data, aes(x = 1:length(residuals(model)), y = residuals(model))) +
geom_point(col = "steelblue", pch = 20) +
geom_abline(intercept = 0, slope = 0, color = "black",
size = 1, alpha=0.5) +
geom_line(aes(x = 1:length(residuals(model)),
y = residuals(model)), color = "red", alpha=0.5) +
labs(x = "Order", y = "Residuals") +
ggtitle("Residuals vs Order") + theme_minimal()
# Menggabungkan semua plot dengan cowplot
plot_grid(qq_plot, plot1, plot2, plot3, nrow = 2, ncol = 2)
shapiro.test(sisaan)
ks.test(sisaan, "pnorm", mean=mean(sisaan), sd=sd(sisaan))
par(mfrow = c(1,2))
acf(sisaan)
pacf(sisaan)
install_load('randtests')
runs.test(model$residuals)
install_load('lmtest')
dwtest(model)
install_load('orcutt')
modelCO <- cochrane.orcutt(model)
modelCO
rho <- modelCO$rho
rho
trans <- data[-1,] - data[-nrow(data),] * rho
modelCOmanual <- lm(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7, trans)
summary(modelCOmanual)
#Mencari Penduga Koefisien Regresi setelah Transformasi ke Persamaan Awal
b0bintang <- coef(modelCOmanual) %>%
as.data.frame() %>%
t() %>%
as_tibble() %>%
setNames(c("b0", "b1", "b2", "b3", "b4", "b5", "b6", "b7"))
b0bintang$b0 <- b0bintang$b0/(1 - rho)
knitr::kable(b0bintang) %>% kableExtra::kable_styling()
hildreth.lu.func<- function(r, model){
x <- model.matrix(model)[,-1]
y <- model.response(model.frame(model))
n <- length(y)
t <- 2:n
y <- y[t]-r*y[t-1]
x <- x[t]-r*x[t-1]
return(lm(y~x))
}
r <- c(seq(0.1,0.9, by= 0.1))
tab <- data.frame("rho" = r, "SSE" = sapply(r,
function(i)deviance(hildreth.lu.func(i, model)) ) )
knitr::kable(round(tab, 4)) %>% kableExtra::kable_styling()
rOpt <- seq(0.2,0.5, by= 0.001)
tabOpt <- data.frame("rho" = rOpt, "SSE" = sapply(rOpt, function(i){deviance(hildreth.lu.func(i, model))}))
head(tabOpt[order(tabOpt$SSE),])
#Mencari Penduga Koefisien Regresi setelah Transformasi ke Persamaan Awal
b0bintang <- coef(modelCOmanual) %>%
as.data.frame() %>%
t() %>%
as_tibble() %>%
setNames(c("b0", "b1", "b2", "b3", "b4", "b5", "b6", "b7"))
b0bintang$b0 <- b0bintang$b0/(1 - rho)
install_load('knitr','kableExtra')
kable(b0bintang) %>% kable_styling()
r <- c(seq(0.1,0.9, by= 0.1))
tab <- data.frame("rho" = r, "SSE" = sapply(r,
function(i)deviance(hildreth.lu.func(i, model)) ) )
kable(round(tab, 4)) %>% kable_styling()
rOpt <- seq(0.2,0.5, by= 0.001)
tabOpt <- data.frame("rho" = rOpt, "SSE" = sapply(rOpt, function(i){deviance(hildreth.lu.func(i, model))}))
kable(head(tabOpt[order(tabOpt$SSE),])) %>% kable_styling()
par(mfrow = c(1,1))
plot(tab$SSE ~ tab$rho , type = "l", xlab = "Rho", ylab = "SSE")
abline(v = tabOpt[tabOpt$SSE==min(tabOpt$SSE),"rho"], lty = 2, col="red",lwd=2)
text(x=0.341, y=0.2397500, labels = "rho=0.341", cex = 0.8)
modelHL <- hildreth.lu.func(0.341, model)
summary(modelHL)
cat("y = ", coef(modelHL)[1]/(1-0.341), "+", coef(modelHL)[2],"x", sep = "")
dwtest(modelHL)
sseModelawal <- anova(model)$`Sum Sq`[-1]
sseModelCO <- anova(modelCOmanual)$`Sum Sq`[-1]
sseModelHL <- anova(modelHL)$`Sum Sq`[-1]
mseModelawal <- sseModelawal/nrow(data)
mseModelCO <- sseModelCO/nrow(data)
mseModelHL <- sseModelHL/nrow(data)
akurasi <- matrix(c(sseModelawal,sseModelCO,sseModelHL,
mseModelawal,mseModelCO,mseModelHL),nrow=2,ncol=3,byrow = T)
colnames(akurasi) <- c("Model Awal", "Model Cochrane-Orcutt", "Model Hildreth-Lu")
row.names(akurasi) <- c("SSE","MSE")
akurasi
model <- lm(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7, data)
summary(model)
round(model$coefficients,2)
sisaan<- residuals(model)
fitValue<- predict(model)
#Diagnostik dengan eksploratif
par(mfrow = c(2,2)) #Buat 4 plot
#Q-Q Plot
qqnorm(sisaan)
qqline(sisaan, col = "steelblue", lwd = 2)
#Sisaan vs Fitted Values
plot(fitValue, sisaan, col = "steelblue", pch = 20,
xlab = "Sisaan", ylab = "Fitted Values", main = "Sisaan vs Fitted Values")
abline(a = 0, b = 0, lwd = 2)
#Histogram
hist(sisaan, col = "steelblue")
#Sisaan vs Order
plot(1:length(sisaan), sisaan, col = "steelblue", pch = 20,
xlab = "Sisaan",
ylab = "Order", main = "Sisaan vs Order")
lines(1:length(sisaan), sisaan, col = "red")
abline(a = 0, b = 0, lwd = 2)
#                      -=( Ggplot Stat Attribute Funciton )=-
gstat <- function(dt){
install_load("dplyr","tibble")
#Set Data Frame
dt <- data.frame(obs = dt[[1]], dat = dt[[2]], row.names = dt[[1]])
#Obs Minimum
om <- data.frame(min = ifelse(dt$dat == min(dt$dat), dt$obs, NA),
min_val = ifelse(dt$dat == min(dt$dat), min(dt$dat), NA))
#Obs Maximum
omx <- data.frame(max = ifelse(dt$dat == max(dt$dat), dt$obs, NA),
max_val = ifelse(dt$dat == max(dt$dat), max(dt$dat), NA))
#Binding together
gs <- cbind(om, omx)
#Calc Mean
mean <- data.frame(mean = round(mean(dt$dat), 2))
#Make it list
gs <- list(gs, mean)
return(gs)
}
boxp( dt =
data %>%
mutate(Index = 1:nrow(.)) %>%
filter(!is.na(y)) %>%
select(Index, y),
labs = data.frame(title='Sebaran Peubah y', ylab='', xlab='Obat M01AB')
)
#                      -=( Ggplot Stat Attribute Funciton )=-
gstat <- function(dt){
install_load("dplyr","tibble")
#Set Data Frame
dt <- data.frame(obs = dt[[1]], dat = dt[[2]], row.names = dt[[1]])
#ID/obs outlier (oo)
oo <- dt %>%
rownames_to_column(var = "outlier") %>%
mutate(is_outlier = if_else(is_outlier(dat), dat, as.numeric(NA))) %>%
mutate(outlier = if_else(is.na(is_outlier) | is_outlier == max(dat)
| is_outlier == min(dat), as.numeric(NA),
as.numeric(outlier)),
is_outlier = if_else(is_outlier == max(dat)
| is_outlier == min(dat),
as.numeric(NA), is_outlier))
#Obs Minimum
om <- data.frame(min = ifelse(dt$dat == min(dt$dat), dt$obs, NA),
min_val = ifelse(dt$dat == min(dt$dat), min(dt$dat), NA))
#Obs Maximum
omx <- data.frame(max = ifelse(dt$dat == max(dt$dat), dt$obs, NA),
max_val = ifelse(dt$dat == max(dt$dat), max(dt$dat), NA))
#Binding together
gs <- cbind(oo, om, omx)
#Calc Mean
mean <- data.frame(mean = round(mean(dt$dat), 2))
#Make it list
gs <- list(gs, mean)
return(gs)
}
View(gstat(data %>%
mutate(Index = 1:nrow(.)) %>%
filter(!is.na(y)) %>%
select(Index, y)))
View(data %>%
+                mutate(Index = 1:nrow(.)) %>%
+                filter(!is.na(y)) %>%
+                select(Index, y)))
View(data %>%
+                mutate(Index = 1:nrow(.)) %>%
+                filter(!is.na(y)) %>%
+                select(Index, y))
View(ata %>%
mutate(Index = 1:nrow(.)) %>%
filter(!is.na(y)) %>%
select(Index, y))
View(data %>%
mutate(Index = 1:nrow(.)) %>%
filter(!is.na(y)) %>%
select(Index, y))
#                           -=( Box Plot Function )=-
boxp <- function(dt, cp=colord, labs=lab1){ #data, color palette, label
install_load('ggplot2')
b <- ggplot(data=dt, aes(y="", x=y)) +
#Violin Plot
geom_violin(scale="count", fill=cp$v[1], color=NA, alpha=0.5,
trim = FALSE) +
#Box Plot
geom_boxplot(fill=cp$f[1], color=cp$c[1],
outlier.size=15, outlier.color=cp$oc[1],
alpha=0.7,notch=T, width = 0.25) +
#Median Value
stat_summary(geom="text", fun=median,
aes(label=sprintf("%1.1f", after_stat(x))),
position=position_nudge(y=0.425), size=16, color=cp$med[1]) +
#IQR1 Value
stat_summary(geom="text", fun="quantile", fun.args=list(probs=0.25),
aes(label=sprintf("%1.1f", after_stat(x))),
position=position_nudge(y=-0.425), size=16, color=cp$iqr[1]) +
#IQR3 Value
stat_summary(geom="text", fun="quantile", fun.args=list(probs=0.75),
aes(label=sprintf("%1.1f", after_stat(x))),
position=position_nudge(y=-0.425), size=16, color=cp$iqr[1]) +
#Mean Marker
stat_summary(fun='mean', geom="point",colour=cp$mean[1],
shape=18, size=16, alpha=0.75) +
#Title
ggtitle(labs$title) +
theme(plot.title = element_text(hjust = 0.5)) + #Title Position
#Labels
ylab(labs$ylab) + xlab(labs$xlab) +
#Mean Value
geom_text(data = data.frame(mean = round(mean(dt$y), 2))
, aes(label = paste0("Mean : ",mean), x = mean),
angle=45, size=16, vjust=-0.5, hjust=0.5, color=cp$mean[1]) +
#Theme
theme1
return(b)
}
View(data)
boxp( dt = data,
labs = data.frame(title='Sebaran Peubah y', ylab='', xlab='Obat M01AB')
)
#                           -=( Default Color Palette )=-
colord <- data.frame(
c = c('#444442', 'Stroke color'),      oc = c('#0b5f6a', 'Outlier color'),
med = c('#c3ac8b', 'Median value color'),
iqr = c('#c3ac8b', 'IQR3 Value'),      mean = c('#608981', 'Mean Marker'),
stringsAsFactors = FALSE
)
#                           -=( Box Plot Function )=-
boxp <- function(dt, cp=colord, labs=lab1){ #data, color palette, label
install_load('ggplot2')
b <- ggplot(data=dt, aes(y="", x=y)) +
#Violin Plot
geom_violin(scale="count", fill=cp$v[1], color=NA, alpha=0.5,
trim = FALSE) +
#Box Plot
geom_boxplot(fill=cp$f[1], color=cp$c[1],
outlier.size=15, outlier.color=cp$oc[1],
alpha=0.7,notch=T, width = 0.25) +
#Median Value
stat_summary(geom="text", fun=median,
aes(label=sprintf("%1.1f", after_stat(x))),
position=position_nudge(y=0.425), size=16, color=cp$med[1]) +
#IQR1 Value
stat_summary(geom="text", fun="quantile", fun.args=list(probs=0.25),
aes(label=sprintf("%1.1f", after_stat(x))),
position=position_nudge(y=-0.425), size=16, color=cp$iqr[1]) +
#IQR3 Value
stat_summary(geom="text", fun="quantile", fun.args=list(probs=0.75),
aes(label=sprintf("%1.1f", after_stat(x))),
position=position_nudge(y=-0.425), size=16, color=cp$iqr[1]) +
#Mean Marker
stat_summary(fun='mean', geom="point",colour=cp$mean[1],
shape=18, size=16, alpha=0.75) +
#Title
ggtitle(labs$title) +
theme(plot.title = element_text(hjust = 0.5)) + #Title Position
#Labels
ylab(labs$ylab) + xlab(labs$xlab) +
#Mean Value
geom_text(data = data.frame(mean = round(mean(dt$y), 2))
, aes(label = paste0("Mean : ",mean), x = mean),
angle=45, size=16, vjust=-0.5, hjust=0.5, color=cp$mean[1]) +
#Theme
theme1
return(b)
}
boxp( dt = data,
labs = data.frame(title='Sebaran Peubah y', ylab='', xlab='Obat M01AB')
)
#                           -=( Default Color Palette )=-
colord <- data.frame(
f = c('#75bfc8', 'Fill color'),       c = c('#444442', 'Stroke color'),
oc = c('#0b5f6a', 'Outlier color'),   med = c('#c3ac8b', 'Median value color'),
iqr = c('#c3ac8b', 'IQR3 Value'),     mean = c('#608981', 'Mean Marker'),
v = c('#c3eca2', 'Violin'),
stringsAsFactors = FALSE
)
boxp( dt = data,
labs = data.frame(title='Sebaran Peubah y', ylab='', xlab='Obat M01AB')
)
ggpairs(data)
install_load('GGally')
ggpairs(data)
install_load('psych')
pairs.panels(data,
method = "pearson", # correlation method
hist.col = "#00AFBB", #Coloring histogram
density = TRUE,  # show density plots
ellipses = TRUE, # show correlation ellipses
smooth = TRUE, #show loess smooths
pch = 20, #Scatter = cirlce / dot
rug = TRUE, #Rug under histogram
stars = TRUE #Significance of corr
)
install_load('psych')
pairs.panels(data,
method = "pearson", # correlation method
hist.col = "#00AFBB", #Coloring histogram
density = TRUE,  # show density plots
ellipses = TRUE, # show correlation ellipses
smooth = TRUE, #show loess smooths
pch = 20, #Scatter = cirlce / dot
rug = TRUE, #Rug under histogram
stars = TRUE #Significance of corr
)
install_load('rio')
raw.data <- import("https://raw.githubusercontent.com/Zen-Rofiqy/STA1341-MPDW/main/Pertemuan%202/salesmonthly.csv")
install_load('dplyr')
data <- raw.data[,2:9] %>%
rename_all(~ c('y', 'x1', 'x2', 'x3', 'x4', 'x5', 'x6', 'x7'))
boxp( dt = data,
labs = data.frame(title='Sebaran Peubah y', ylab='', xlab='Obat M01AB')
)
install_load('psych')
pairs.panels(data,
method = "pearson", # correlation method
hist.col = "#00AFBB", #Coloring histogram
density = TRUE,  # show density plots
ellipses = TRUE, # show correlation ellipses
smooth = TRUE, #show loess smooths
pch = 20, #Scatter = cirlce / dot
rug = TRUE, #Rug under histogram
stars = TRUE #Significance of corr
)
model <- lm(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7, data)
summary(model)
sisaan<- residuals(model)
fitValue<- predict(model)
#Diagnostik dengan eksploratif
par(mfrow = c(2,2)) #Buat 4 plot
#Q-Q Plot
qqnorm(sisaan)
qqline(sisaan, col = "steelblue", lwd = 2)
#Sisaan vs Fitted Values
plot(fitValue, sisaan, col = "steelblue", pch = 20,
xlab = "Sisaan", ylab = "Fitted Values", main = "Sisaan vs Fitted Values")
abline(a = 0, b = 0, lwd = 2)
#Histogram
hist(sisaan, col = "steelblue")
#Sisaan vs Order
plot(1:length(sisaan), sisaan, col = "steelblue", pch = 20,
xlab = "Sisaan",
ylab = "Order", main = "Sisaan vs Order")
lines(1:length(sisaan), sisaan, col = "red")
abline(a = 0, b = 0, lwd = 2)
install_load('ggplot2','cowplot')
# Membuat QQ Plot
qq_plot <- ggplot(data, aes(sample = y)) +
geom_qq(fill=NA, alpha=0.5) +
geom_qq_line(color = "steelblue") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles") +
ggtitle("QQ Plot") + theme_minimal()
# Membuat plot sisaan vs Fitted Values dengan ggplot2
plot1 <- ggplot(data, aes(x = fitted(model), y = residuals(model))) +
geom_point(col = "steelblue", pch = 20) +
geom_abline(intercept = 0, slope = 0, color = "black",
size = 0.75, alpha=0.5) +
labs(x = "Fitted Values", y = "Residuals") +
ggtitle("Residuals vs Fitted Values") + theme_minimal()
# Membuat histogram sisaan dengan ggplot2
plot2 <- ggplot(data, aes(x = residuals(model))) +
geom_histogram(binwidth = 10, fill = "steelblue", color = "black") +
labs(x = "Residuals", y = "Frequency") +
ggtitle("Histogram of Residuals") + theme_minimal()
# Membuat plot sisaan vs Order dengan ggplot2
plot3 <- ggplot(data, aes(x = 1:length(residuals(model)), y = residuals(model))) +
geom_point(col = "steelblue", pch = 20) +
geom_abline(intercept = 0, slope = 0, color = "black",
size = 1, alpha=0.5) +
geom_line(aes(x = 1:length(residuals(model)),
y = residuals(model)), color = "red", alpha=0.5) +
labs(x = "Order", y = "Residuals") +
ggtitle("Residuals vs Order") + theme_minimal()
# Menggabungkan semua plot dengan cowplot
plot_grid(qq_plot, plot1, plot2, plot3, nrow = 2, ncol = 2)
install_load('ggplot2','cowplot')
# Membuat QQ Plot
qq_plot <- ggplot(data, aes(sample = y)) +
geom_qq(fill=NA, alpha=0.5) +
geom_qq_line(color = "steelblue") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles") +
ggtitle("QQ Plot") + theme_minimal()
# Membuat plot sisaan vs Fitted Values dengan ggplot2
plot1 <- ggplot(data, aes(x = fitted(model), y = residuals(model))) +
geom_point(col = "steelblue", pch = 20) +
geom_abline(intercept = 0, slope = 0, color = "black",
size = 0.75, alpha=0.5) +
labs(x = "Fitted Values", y = "Residuals") +
ggtitle("Residuals vs Fitted Values") + theme_minimal()
# Membuat histogram sisaan dengan ggplot2
plot2 <- ggplot(data, aes(x = residuals(model))) +
geom_histogram(binwidth = 10, fill = "steelblue", color = "black") +
labs(x = "Residuals", y = "Frequency") +
ggtitle("Histogram of Residuals") + theme_minimal()
# Membuat plot sisaan vs Order dengan ggplot2
plot3 <- ggplot(data, aes(x = 1:length(residuals(model)), y = residuals(model))) +
geom_point(col = "steelblue", pch = 20) +
geom_abline(intercept = 0, slope = 0, color = "black",
size = 1, alpha=0.5) +
geom_line(aes(x = 1:length(residuals(model)),
y = residuals(model)), color = "red", alpha=0.5) +
labs(x = "Order", y = "Residuals") +
ggtitle("Residuals vs Order") + theme_minimal()
# Menggabungkan semua plot dengan cowplot
plot_grid(qq_plot, plot1, plot2, plot3, nrow = 2, ncol = 2)
shapiro.test(sisaan)
ks.test(sisaan, "pnorm", mean=mean(sisaan), sd=sd(sisaan))
shapiro.test(sisaan)
par(mfrow = c(1,2))
acf(sisaan)
pacf(sisaan)
